# Generated by Django 4.2.1 on 2023-06-01 16:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_text', models.TextField(blank=True, null=True)),
                ('body_photo', models.ImageField(blank=True, null=True, upload_to='questions/')),
                ('score', models.FloatField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_text', models.TextField(blank=True, null=True)),
                ('body_photo', models.ImageField(blank=True, null=True, upload_to='options/')),
                ('order_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('has_random_questions', models.BooleanField(default=False)),
                ('has_random_options', models.BooleanField(default=False)),
                ('total_questions', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='QuizCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='QuizInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quizinstance')),
            ],
        ),
        migrations.AddField(
            model_name='quiz',
            name='categories',
            field=models.ManyToManyField(to='quiz.quizcategory'),
        ),
        migrations.AddField(
            model_name='question',
            name='categories',
            field=models.ManyToManyField(to='quiz.questioncategory'),
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('score', models.FloatField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_questions', to='quiz.quiz')),
            ],
            options={
                'unique_together': {('quiz', 'question')},
            },
        ),
        migrations.CreateModel(
            name='QuizInstanceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_order', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question')),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instance_questions', to='quiz.quizinstance')),
            ],
            options={
                'unique_together': {('quiz_instance', 'question')},
            },
        ),
        migrations.CreateModel(
            name='QuizInstanceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_order', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('selected', models.BooleanField(default=False)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.questionoption')),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quizinstance')),
            ],
            options={
                'unique_together': {('quiz_instance', 'option')},
            },
        ),
    ]
